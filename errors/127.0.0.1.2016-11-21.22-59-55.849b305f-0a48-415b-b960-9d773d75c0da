(dp1
S'output'
p2
S"<type 'exceptions.NameError'> global name 'true' is not defined"
p3
sS'layer'
p4
S'/mnt/c/web2py/applications/project/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n# -------------------------------------------------------------------------\n# This is a sample controller\n# - index is the default action of any application\n# - user is required for authentication and authorization\n# - download is for downloading files uploaded in the db (does streaming)\n# -------------------------------------------------------------------------\n\ndef get_user_name_from_email(email):\n    """Returns a string corresponding to the user first and last names,\n    given the user email."""\n    u = db(db.auth_user.email == email).select().first()\n    if u is None:\n        return \'None\'\n    else:\n        return \' \'.join([u.first_name, u.last_name])\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n\n    if you need a simple wiki simply replace the two lines below with:\n    return auth.wiki()\n    """\n    return dict(message=T(\'Welcome to PayMe!\'))\n\ndef housemate():\n    return dict()\n\ndef settings():\n    grid = SQLFORM(db.pictures, writable=true)\n    row = db(db.pictures.user_email == auth.user.email).select().first()\n    if row is not None:\n        picture = row.file_name\n    else:\n        picture = "slug.png"\n\n\n    return dict(grid = grid, profile_pic = picture)\n\ndef events():\n    return dict()\n\ndef individual_loans():\n    return dict()\n\ndef subscriptions():\n    row = db(db.pictures.user_email == "default@ucsc.edu").select().first()\n    picture = row.file_name\n    if auth.user is not None:\n        row = db(db.pictures.user_email == auth.user.email).select().first()\n        if row is not None:\n            picture = row.file_name\n    return dict(profile_pic=picture, get_username = get_user_name_from_email)\n\ndef newsfeed():\n    return dict()\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/bulk_register\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    also notice there is http://..../[app]/appadmin/manage/auth to allow administrator to manage users\n    """\n    return dict(form=auth())\n\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n\nresponse._vars=response._caller(settings)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/mnt/c/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/mnt/c/web2py/applications/project/controllers/default.py", line 101, in <module>\n  File "/mnt/c/web2py/gluon/globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "/mnt/c/web2py/applications/project/controllers/default.py", line 34, in settings\n    grid = SQLFORM(db.pictures, writable=true)\nNameError: global name \'true\' is not defined\n'
p11
s.